# Set up cmake
cmake_minimum_required (VERSION 3.0)
project (qt_vulkan_example CXX)

# Set compiling output directories
set(CMAKE_BIN "${CMAKE_BINARY_DIR}/bin")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BIN})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BIN})
if (UNIX)
  set(CMAKE_LIB "${CMAKE_BINARY_DIR}/lib")
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIB})
  set(CMAKE_SHARED_LIBRARY_PREFIX "")
else()
  set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BIN}")
  set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BIN}")
  set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO "${CMAKE_BIN}")
  set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL "${CMAKE_BIN}")
  set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BIN}")
  set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BIN}")
  set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO "${CMAKE_BIN}")
  set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL "${CMAKE_BIN}")
  set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BIN}")
  set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BIN}")
  set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO "${CMAKE_BIN}")
  set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL "${CMAKE_BIN}")
endif()
if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set (CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/${PROJECT_NAME}_install"
           CACHE PATH "default install path" FORCE)
endif()
message(STATUS "Install directory: ${CMAKE_INSTALL_PREFIX}")
set(INSTALL_BIN_DIR "${CMAKE_INSTALL_PREFIX}/bin")
set(INSTALL_LIB_DIR "${CMAKE_INSTALL_PREFIX}/lib")

# Find LIbrary
find_package(Qt5 5.10.0 REQUIRED COMPONENTS Core Gui Widgets)
message(STATUS "Qt (${Qt5_VERSION}): ${Qt5_DIR}")
message(STATUS "Qt core(${Qt5Core_VERSION}): ${Qt5Core_DIR}")
message(STATUS "Qt widgets(${Qt5Widgets_VERSION}): ${Qt5Widgets_DIR}")
set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)

# Vulkan
find_package(Vulkan ${Vulkan_MIN_VERSION} REQUIRED)
include_directories(${Vulkan_INCLUDE_DIR})

# Add code
add_subdirectory(src)
